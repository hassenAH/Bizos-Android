// Generated by Dagger (https://dagger.dev).
package tn.esprit.roommodule;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import tn.esprit.roommodule.dao.UserDao;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomModule_ProvideUserDaoFactory implements Factory<UserDao> {
  private final RoomModule module;

  private final Provider<NebulaGamingDatabase> databaseProvider;

  public RoomModule_ProvideUserDaoFactory(RoomModule module,
      Provider<NebulaGamingDatabase> databaseProvider) {
    this.module = module;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public UserDao get() {
    return provideUserDao(module, databaseProvider.get());
  }

  public static RoomModule_ProvideUserDaoFactory create(RoomModule module,
      Provider<NebulaGamingDatabase> databaseProvider) {
    return new RoomModule_ProvideUserDaoFactory(module, databaseProvider);
  }

  public static UserDao provideUserDao(RoomModule instance, NebulaGamingDatabase database) {
    return Preconditions.checkNotNullFromProvides(instance.provideUserDao(database));
  }
}
